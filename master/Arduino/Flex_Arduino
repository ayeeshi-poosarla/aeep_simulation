// Flex sensor analog input pins
const int FLEX_PINS[4] = {A0, A1, A2, A3};

// Direction labels for each sensor
const char* DIRECTIONS[4] = {"North", "East", "South", "West"};

// Constants for voltage and resistor divider
const float VCC = 4.98;        // Measured voltage from Arduino 5V pin
const float R_DIV = 47500.0;   // Resistor used in voltage divider (in ohms)

// Expected resistance values for a straight and bent flex sensor
const float STRAIGHT_RESISTANCE = 37300.0;
const float BEND_RESISTANCE = 90000.0;

// Array to store baseline resistance (calibrated when straight)
float baselineResistance[4];

void setup() {
  Serial.begin(9600);

  // Initialize flex sensor pins
  for (int i = 0; i < 4; i++) {
    pinMode(FLEX_PINS[i], INPUT);
  }

  // Calibration
  const int NUM_SAMPLES = 20;  // Number of samples to average
  Serial.println("Calibrating sensors with averaging...");
  delay(1000); // Let sensors settle

  for (int i = 0; i < 4; i++) {
    float totalResistance = 0.0;

    // Take multiple readings
    for (int j = 0; j < NUM_SAMPLES; j++) {
      int flexADC = analogRead(FLEX_PINS[i]);
      float flexV = flexADC * VCC / 1023.0;
      float resistance = R_DIV * (VCC / flexV - 1.0);
      totalResistance += resistance;
      delay(20);  // Small delay between reads for stability
    }

    baselineResistance[i] = totalResistance / NUM_SAMPLES;

    // Print averaged baseline
    Serial.print("Sensor ");
    Serial.print(i + 1);
    Serial.print(" (");
    Serial.print(DIRECTIONS[i]);
    Serial.print(") Baseline Resistance (avg of ");
    Serial.print(NUM_SAMPLES);
    Serial.print("): ");
    Serial.print(baselineResistance[i]);
    Serial.println(" ohms");
  }

  Serial.println("Calibration complete.\n");
}


void loop() {
  for (int i = 0; i < 4; i++) {
    // Read current sensor value
    int flexADC = analogRead(FLEX_PINS[i]);
    float flexV = flexADC * VCC / 1023.0;
    float flexR = R_DIV * (VCC / flexV - 1.0); // Current resistance

    // Calibrated resistance (change from baseline)
    float calibratedR = flexR - baselineResistance[i];

    // Estimate angle from raw resistance
    float angle = map(flexR, STRAIGHT_RESISTANCE, BEND_RESISTANCE, 0, 90.0);
    
    // Estimate angle from calibrated resistance
    float calibratedAngle = map(calibratedR, 0, BEND_RESISTANCE - STRAIGHT_RESISTANCE, 0, 90.0);

    // Output results
    Serial.print("Sensor ");
    Serial.print(i + 1);
    Serial.print(" (");
    Serial.print(DIRECTIONS[i]);
    Serial.print(") | Angle: ");
    Serial.print(calibratedAngle);
    Serial.println("Â°");

    delay(100);  // Small delay between sensor reads
  }

  Serial.println();  // Blank line for readability
  delay(500);        // Pause before next full cycle
}
